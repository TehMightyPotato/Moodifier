@page "/music"
@using MightyPotato.PnP.Moodifier.Server.Audio.Services
@using MightyPotato.PnP.Moodifier.Server.Audio.Models
@using MightyPotato.PnP.Moodifier.Server.Components
@inject PlaylistService PlaylistService
@inject AudioPlaybackService PlaybackService

<PageTitle>Moodifier Music Player</PageTitle>
<div class="top-0 w-100">
    <div class="float-start">
        
        @if (_backStack != null && _backStack.Count > 0)
        {
            <button type="button" class="btn btn-lg btn-primary" @onclick="BackButtonClicked">
                <i class="material-symbols-outlined d-flex">arrow_back</i>
            </button>
        }
        else
        {
            <button type="button" class="btn btn-lg btn-primary disabled" disabled>
                <i class="material-symbols-outlined d-flex">arrow_back</i>
            </button>
        }
    </div>
    <div class="float-end">
        <button type="button" class="btn btn-lg btn-danger">
            <i class="material-symbols-outlined d-flex">stop_circle</i>
        </button>
    </div>
    
</div>

<div class="d-flex flex-column min-vh-100 justify-content-center align-items-center">
    @if (_playlistStructure != null)
    {
        @foreach (var playlist in _current)
        {
            @if (playlist.MusicFiles != null && playlist.MusicFiles.Count <= 0)
            {
                <Folder PlaylistElement="playlist" OnClickCallback="FolderClicked"></Folder>
            }
            else
            {
                <Playlist PlaylistElement="playlist" OnClickCallback="PlaylistClicked"></Playlist>
            }
        }
    }
    else
    {
        <div class="spinner-border align-content-center" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
</div>

@code {
    private List<PlaylistElement>? _playlistStructure;

    private List<PlaylistElement> _current = null!;

    private PlaylistElement? _playlistBeingPlayed;

#pragma warning disable CS8618
    private Stack<List<PlaylistElement>> _backStack;
#pragma warning restore CS8618

    protected override void OnInitialized()
    {
        _playlistStructure = PlaylistService.GetStructure();
        _backStack = new Stack<List<PlaylistElement>>();
        _current = _playlistStructure;
    }

    private void FolderClicked(PlaylistElement element)
    {
        _backStack.Push(_current);
        _current = element.Children!;
        StateHasChanged();
    }

    private async Task PlaylistClicked(PlaylistElement element)
    {
        _playlistBeingPlayed = element;
        await PlaybackService.PlayFromPlaylistAsync(element.Path);
    }

    private void BackButtonClicked()
    {
        _current = _backStack.Pop();
    }

}